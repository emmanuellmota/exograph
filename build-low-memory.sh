#!/bin/bash

# Script para build com limita√ß√£o de mem√≥ria
# Este script limita o uso de recursos durante o processo de build

set -e

# Configura√ß√µes de limite de mem√≥ria
MEMORY_LIMIT="8G"  # Ajuste conforme necess√°rio (ex: 2G, 8G, etc.)
JOBS=1  # N√∫mero de jobs paralelos

echo "üöÄ Iniciando build com limita√ß√£o de mem√≥ria..."
echo "üìä Limite de mem√≥ria: $MEMORY_LIMIT"
echo "üîß Jobs paralelos: $JOBS"

# Fun√ß√£o para verificar se o comando ulimit est√° dispon√≠vel
check_ulimit() {
    if command -v ulimit >/dev/null 2>&1; then
        echo "‚úÖ ulimit dispon√≠vel"
        return 0
    else
        echo "‚ö†Ô∏è  ulimit n√£o dispon√≠vel, continuando sem limita√ß√£o de mem√≥ria virtual"
        return 1
    fi
}

# Fun√ß√£o para verificar se o comando systemd-run est√° dispon√≠vel
check_systemd() {
    if command -v systemd-run >/dev/null 2>&1; then
        echo "‚úÖ systemd-run dispon√≠vel"
        return 0
    else
        echo "‚ö†Ô∏è  systemd-run n√£o dispon√≠vel"
        return 1
    fi
}

# Configurar vari√°veis de ambiente para reduzir uso de mem√≥ria
export CARGO_BUILD_JOBS=$JOBS
export CARGO_PROFILE_DEV_CODEGEN_UNITS=256
export CARGO_PROFILE_RELEASE_CODEGEN_UNITS=16
export RUSTC_FORCE_INCREMENTAL=1

# Limpeza antes do build
echo "üßπ Limpando cache anterior..."
cargo clean

# M√©todo 1: Usar systemd-run (recomendado para sistemas com systemd)
if check_systemd; then
    echo "üîÑ Usando systemd-run para limita√ß√£o de mem√≥ria..."
    systemd-run --user --scope -p MemoryMax=$MEMORY_LIMIT \
        cargo build --jobs $JOBS "$@"
    
# M√©todo 2: Usar ulimit (fallback)
elif check_ulimit; then
    echo "üîÑ Usando ulimit para limita√ß√£o de mem√≥ria..."
    # Converter limite de mem√≥ria para KB (ulimit usa KB)
    MEMORY_KB=$(echo $MEMORY_LIMIT | sed 's/G/*1024*1024/g; s/M/*1024/g' | bc)
    
    # Aplicar limites
    ulimit -v $MEMORY_KB  # Mem√≥ria virtual
    ulimit -m $MEMORY_KB  # Mem√≥ria residente
    
    cargo build --jobs $JOBS "$@"
    
# M√©todo 3: Build normal com configura√ß√µes otimizadas
else
    echo "üîÑ Build normal com configura√ß√µes de baixo uso de mem√≥ria..."
    cargo build --jobs $JOBS "$@"
fi

echo "‚úÖ Build conclu√≠do!"
