# ConfiguraÃ§Ãµes de ambiente para reduzir uso de memÃ³ria durante builds
# Source este arquivo antes de executar builds: source build-env.sh

# Limita o nÃºmero de jobs paralelos do cargo
export CARGO_BUILD_JOBS=1

# ConfiguraÃ§Ãµes do compilador Rust para usar menos memÃ³ria
export RUSTC_FORCE_INCREMENTAL=1
export CARGO_INCREMENTAL=1

# ConfiguraÃ§Ãµes de perfil para usar menos memÃ³ria
export CARGO_PROFILE_DEV_CODEGEN_UNITS=256
export CARGO_PROFILE_RELEASE_CODEGEN_UNITS=16
export CARGO_PROFILE_DEV_DEBUG=0

# ConfiguraÃ§Ãµes do linker para usar menos memÃ³ria
export CARGO_PROFILE_DEV_LTO="off"
export CARGO_PROFILE_RELEASE_LTO="thin"

# ConfiguraÃ§Ãµes para builds WebAssembly (usado no cf-worker)
export WASM_PACK_CACHE_PATH="./target/wasm-pack-cache"

# ConfiguraÃ§Ãµes de memÃ³ria do sistema (se disponÃ­vel)
if command -v ulimit >/dev/null 2>&1; then
    # Limita memÃ³ria virtual a 4GB (ajuste conforme necessÃ¡rio)
    ulimit -v 4194304  # 4GB em KB
    echo "âœ… Limite de memÃ³ria virtual definido para 4GB"
fi

# ConfiguraÃ§Ãµes para sistemas com pouca memÃ³ria
export CARGO_NET_RETRY=3
export CARGO_HTTP_TIMEOUT=30

echo "ðŸ”§ Ambiente configurado para build com baixo uso de memÃ³ria"
echo "ðŸ“Š Jobs paralelos: $CARGO_BUILD_JOBS"
echo "ðŸ§  Build incremental: $CARGO_INCREMENTAL"
echo "ðŸ”— LTO: thin (release) / off (dev)"
